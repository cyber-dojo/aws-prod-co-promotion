
DONE: Decide on Flow name: prod-promotion
DONE: Create Flow on kosli staging AND prod
DONE: Add KOSLI_FLOW repo-level Github Action env-var

DONE: Make a forced change on saver (eg) and do not deploy to prod.
DONE: Check the "kosli diff snapshots" sees a difference
        {
          "snappish1": {
            "snapshot_id": "aws-beta#4967",
            "artifacts": [
              {
                "fingerprint": "b3237b0e615e7041c23433faeee0bacd6ec893e89ae8899536433e4d27a5b6ef",
                "name": "244531986313.dkr.ecr.eu-central-1.amazonaws.com/saver:6e191a0@sha256:b3237b0e615e7041c23433faeee0bacd6ec893e89ae8899536433e4d27a5b6ef",
                "most_recent_timestamp": 1740565629,
                "flow": "saver-ci",
                "commit_url": "https://github.com/cyber-dojo/saver/commit/6e191a0a86cf3d264955c4910bc3b9df518c4bcd",
                "instance_count": 1
              }
            ]
          },
          "snappish2": {
          ...
        }


Create a custom-attestation promotion type in kosli-attestation-types repo.
  Name?

Work on candidates.sh

In workflow, each Artifact will need (can these be done in parallel?):

- kosli attest artifact "${KOSLI_FINGERPRINT}" \
      --name=NAME

- kosli attest custom --type=????
      --fingerprint="${KOSLI_FINGERPRINT}"
      --attestation-data=????
      --name=NAME.????

- kosli assert artifact \
      --fingerprint="${KOSLI_FINGERPRINT}" \
      --environment="${KOSLI_AWS_PROD}"


Then each artifact will need:
- kosli report approval "${IMAGE_NAME}"
    --approver="${{ github.actor }}"
    --environment="${KOSLI_AWS_PROD}"

Then each artifact can be deployed.
